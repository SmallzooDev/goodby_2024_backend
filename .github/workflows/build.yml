name: CI

on:
  push:
    branches: ["deploy"]
    paths-ignore:
      - "README.md"
      - Dockerfile
  pull_request:
    branches: ["deploy"]
    paths-ignore:
      - "README.md"
      - Dockerfile

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ vars.DATABASE_URL }}
  PORT: ${{ vars.PORT }}
  JWT_SECRET: ${{ vars.JWT_SECRET }}
  JWT_TTL_IN_MINUTES: 60
  SQLX_OFFLINE: true

jobs:
  build-docker-img:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create .env file
        run: |
          echo "DATABASE_URL=$DATABASE_URL" > .env
          echo "PORT=$PORT" >> .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
          echo "JWT_TTL_IN_MINUTES=$JWT_TTL_IN_MINUTES" >> .env

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/example:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            DATABASE_URL=${{ vars.DATABASE_URL }}
            PORT=${{ vars.PORT }}
            JWT_SECRET=${{ vars.JWT_SECRET }}
            JWT_TTL_IN_MINUTES=60

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
